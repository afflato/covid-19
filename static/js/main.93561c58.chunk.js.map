{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","container","card","infected","recovered","deaths","Cards","_ref","_ref$data","data","confirmed","lastUpdate","react_default","a","createElement","className","styles","Grid","spacing","justify","item","component","Card","xs","md","cx","CardContent","Typography","color","gutterBottom","variant","build_default","start","end","value","duration","separator","Date","toDateString","url","fetchData","Object","asyncToGenerator","regenerator_default","mark","_callee","country","changeableUrl","_yield$axios$get","_yield$axios$get$data","wrap","_context","prev","next","concat","axios","get","sent","abrupt","t0","stop","_x","apply","this","arguments","fetchDailyData","_ref2","_callee2","_yield$axios$get2","modifiedData","_context2","map","dailyData","date","fetchCountries","_ref3","_callee3","_yield$axios$get3","countries","_context3","name","Chart","_useState","useState","_useState2","slicedToArray","setDailyData","fetchApi","t1","useEffect","lineChart","length","es","labels","datasets","_ref4","total","label","borderColor","fill","_ref5","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","console","log","_this","setState","_this$state","image","src","coronaImage","alt","components_Cards_Cards","components_CountryPicker_CountryPicker","components_Chart_Chart","React","Component","ReactDOM","render","src_App","document","getElementById","__webpack_require__","p"],"mappings":"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","file":"static/js/main.93561c58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport Countup from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <Countup\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <Countup\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recoveries from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <Countup\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async country => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate }\n    } = await axios.get(changeableUrl);\n\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {}\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map(dailyData => ({\n      confirmed: dailyData.confirmed,\n      deaths: dailyData.deaths,\n      date: dailyData.date\n    }));\n    return modifiedData;\n  } catch (error) {}\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries }\n    } = await axios.get(`${url}/countries`);\n\n    return countries.map(country => country.name);\n  } catch (error) {}\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n  const fetchApi = async () => {\n    setDailyData(await fetchDailyData());\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed.total),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths.total),\n            label: \"Death\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true\n          }\n        ]\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0,0,255,0.5)\",\n              \"rgba(0,255,0, 0.5)\",\n              \"rgba(255,0,0,0.5)\"\n            ],\n            data: [confirmed.value, recovered.value, deaths.value]\n          }\n        ]\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` }\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n    fetchAPI();\n  }, [countries.length]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={e => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\"> Global</option>\n        {countries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from \"react\";\n\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport coronaImage from \"./images/image.png\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\"\n  };\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async country => {\n    console.log(country);\n    //fetch the data\n    const fetchedData = await fetchData(country);\n    console.log(fetchedData);\n    //set the state\n    this.setState({ data: fetchedData, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}